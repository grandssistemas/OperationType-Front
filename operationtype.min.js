angular.module("operationtype.templates",[]).run(["$templateCache",function(e){e.put("modules/paymentform/views/base.html",'<div id="wrapper"><grands-menu menu-url="gumga-menu.json" keys-url="keys.json"></grands-menu><div id="page-wrapper" class="gray-bg"><grands-nav></grands-nav><page-header tag="paymentmethods.menulabel"></page-header><div ui-view class="wrapper wrapper-content animated fadeInRight"></div></div></div>'),e.put("modules/paymentform/views/form.html",'<form name="forms" novalidate><div class="row"><div class="col-lg-6"><div class="ibox float-e-margins"><div class="ibox-title"><h5><span gumga-translate-tag="paymentmethods.paymentmethods">Payment Methods</span></h5></div><div class="ibox-content"><div class="row"><div class="col-md-12"><label gumga-translate-tag="paymentmethods.type">Type</label></div></div><div class="row"><div class="col-md-12"><div class="btn-group" ng-init="typeAux = \'\'"><button class="btn" ng-click="typeAux = treePattern[1];objAux = {name:objAux.name}" ng-class="typeAux == treePattern[1]?\'btn-default\':\'btn-white\'" type="button"><span gumga-translate-tag="paymentmethods.paymentcategory">Payment category</span></button><button class="btn" ng-click="typeAux = treePattern[2];objAux = {name:objAux.name,description:objAux.description}; focusName = true" ng-class="typeAux == treePattern[2]?\'btn-default\':\'btn-white\'" type="button"><span gumga-translate-tag="paymentmethods.paymentmethod">Payment Method</span></button></div></div></div><div class="row m-t"><div class="col-md-12"><label for="name" gumga-translate-tag="paymentmethods.name">name</label><input id="name" type="text" name="name" ng-model="objAux.name" class="form-control" ng-disabled="typeAux == \'\'"></div></div><div class="row m-t"><div class="col-md-6" ng-show="typeAux == treePattern[2]"><label gumga-translate-tag="paymentmethods.federalrevenue">Federal Revenue</label><ui-select ng-model="objAux.method" on-select="getSelectedPayment($item)"><ui-select-match>{{$select.selected.label}}</ui-select-match><ui-select-choices repeat="pay.key as pay in paymentMethodsList | filter: $select.search"><div ng-bind-html="pay.label | highlight: $select.search"></div></ui-select-choices></ui-select></div><div class="col-md-5"><div ng-if="typeAux == treePattern[2]"><label for="descrition" gumga-translate-tag="paymentmethods.icon">Icon</label><input id="descrition" type="text" name="descrition" ng-model="objAux.icon" class="form-control"></div></div><div class="col-md-1 m-t" style="margin-top: 26px"><span class="{{objAux.icon}} fa-2x"></span></div></div><div class="row m-t"><div class="pull-right container-fluid"><button ng-click="objAux = addNew(objAux,typeAux)" ng-disabled="invalidAddButton(typeAux, objAux)" grands-button="add"></button></div></div></div></div></div></div><div class="row"><div class="col-lg-12"><div class="ibox float-e-margins"><div class="ibox-title"><h5><span gumga-translate-tag="paymentmethods.paymenthierarchy">Payment Hierarchy</span></h5></div><div class="ibox-content"><div class="row"><grands-category-tree list="array" model-list="list" charac-origin="PAYMENT" pattern="treePattern" type-attribute="paymentMethodsTypes" delete-functions="deleteFunctions" get-childrens="getChildrens(id,type)"></grands-category-tree></div></div></div></div></div><div class="pull-right"><button type="button" grands-button="return" ui-sref="home" ng-show="entity.id"></button><button type="button" grands-button="cancel" ui-sref="home" ng-hide="entity.id"></button><button type="button" grands-button="save" ng-click="update(list)" ng-disabled="forms.$invalid"></button></div></form>'),e.put("modules/stock/views/base.html",'<div id="wrapper"><grands-menu menu-url="gumga-menu.json" keys-url="keys.json"></grands-menu><div id="page-wrapper" class="gray-bg"><grands-nav></grands-nav><page-header tag="stock.menulabel"></page-header><div ui-view class="wrapper wrapper-content animated fadeInRight"></div></div></div>'),e.put("modules/stock/views/form.html",'<form name="forms" novalidate><div class="row"><div class="col-lg-6"><div class="ibox float-e-margins"><div class="ibox-title"><h5><span gumga-translate-tag="stock.title">Title</span></h5></div><div class="ibox-content"><div class="row"><div class="col-md-12"><label gumga-translate-tag="stock.type">Type</label></div><div class="col-md-12"><div class="btn-group" ng-init="typeAux = \'\'"><button class="btn" ng-click="typeAux = treePattern[2];objAux = {name:objAux.name,description:objAux.description}; focusName = true;createObject();" ng-class="typeAux == treePattern[2]?\'btn-default\':\'btn-white\'" type="button"><span gumga-translate-tag="stock.typeofoperation">Type of Operation</span></button></div></div><div class="col-md-12"><label for="name" gumga-translate-tag="stock.name">name</label><input id="name" type="text" name="name" ng-model="objAux.name" class="form-control" ng-disabled="typeAux == \'\'"><div ng-if="typeAux == treePattern[1]"><label for="descrition" gumga-translate-tag="stock.descrition">Descrition</label><input id="descrition" type="text" name="descrition" ng-model="objAux.descrition" class="form-control"></div><div ng-if="typeAux == treePattern[2]"><label gumga-translate-tag="stock.invoiceobjective">Invoice Objective</label><select class="form-control" ng-model="objAux.invoiceObjective" ng-options="df.key as df.label for df in documentFinalityList"></select></div><div ng-if="typeAux == treePattern[2]"><label gumga-translate-tag="stock.operationcategory">Operation Category</label><strong class="text-danger">*</strong><select class="form-control" ng-model="objAux.operationCategory" ng-options="oc.key as oc.label for oc in operationCategoryList"></select></div><div ng-if="typeAux == treePattern[2]"><div class="row"><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.allowFreight" label="stock.allowFreight"></grands-check></div><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.allowStockMovement" label="stock.allowStockMovement"></grands-check></div><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.allowCashMovement" label="stock.allowCashMovement"></grands-check></div></div><div class="row"><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.allowNFe" label="stock.allowNfe"></grands-check></div><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.allowNFCe" label="stock.allowNFce"></grands-check></div><div class="col-md-4 m-t"><grands-check model="objAux.fixedCharacteristics.quickSale" label="stock.quickSale"></grands-check></div></div></div><button class="btn btn-primary pull-right m-t" ng-click="objAux = addNew(objAux,typeAux)" ng-disabled="typeAux == \'\' || objAux.name == null || objAux.name == \'\'"><span class="fa fa-plus"></span><span gumga-translate-tag="stock.add">add</span></button></div></div></div></div></div></div><div class="row"><div class="col-lg-12"><div class="ibox float-e-margins"><div class="ibox-title"><h5><span gumga-translate-tag="stock.entranceandexit">Entrance and Exit</span></h5></div><div class="ibox-content"><div class="row"><grands-category-tree list="array" model-list="list" pattern="treePattern" charac-origin="OPERATION" type-attribute="stockType" get-childrens="getChildrens(id,type)" update-entity="editOperation(data)" enable-remove="removable(data)" delete-functions="deleteFunctions"></grands-category-tree></div></div></div></div></div><div class="pull-right"><button type="button" grands-button="return" ui-sref="home" ng-show="entity.id"></button><button type="button" grands-button="cancel" ui-sref="home" ng-hide="entity.id"></button><button type="button" grands-button="save" ng-click="update(list)" ng-disabled="forms.$invalid"></button></div></form>')}]),angular.module("app.paymentform.services",["api.location"]),angular.module("app.stock.services",["api.location"]),angular.module("app.paymentform",["ui.router","app.paymentform.controllers","app.paymentform.services"]).config(["$stateProvider",function(e){e.state("paymentmethods.insert",{url:"/insert",templateUrl:"modules/paymentform/views/form.html",controller:"PaymentFormController",controllerAs:"form",data:{id:3},resolve:{entity:function(){return{}}}})}]),angular.module("app.stock",["ui.router","app.stock.controllers","app.stock.services"]).config(["$stateProvider",function(e){e.state("stock.insert",{url:"/insert",templateUrl:"modules/stock/views/form.html",controller:"StockFormController",controllerAs:"form",data:{id:3},resolve:{entity:function(){return{}}}})}]),angular.module("app.paymentform.controllers",["app.paymentform.services","ui.router"]),angular.module("app.stock.controllers",["app.stock.services","ui.router"]),angular.module("operationtype.core",["ui.router","ngSanitize","gumga.core","brasil.filters","ui.utils.masks","datePicker","app.paymentform","app.stock","operationtype.templates"]).config(["$stateProvider",function(e){e.state("paymentmethods",{data:{id:1},url:"/paymentmethods",templateUrl:"modules/paymentmethods/views/base.html"}).state("stock",{data:{id:1},url:"/stock",templateUrl:"modules/stock/views/base.html"})}]),angular.module("app.paymentform.services").service("PaymentCategoryService",["GumgaRest","apiLocation",function(e,t){var a=new e(t+"/api/paymentcategory");return a}]),angular.module("app.paymentform.services").service("PaymentFormService",["GumgaRest","apiLocation",function(e,t){function a(e){return n.extend("post","/tree/save",e)}var n=new e(t.concat("/api/paymentform"));return n.saveTree=function(e){var t=e.map(a);return $q.all(t)},n.getTree=function(){return n.extend("get","/tree")},n.getChildrens=function(e,t){return n.extend("get","/tree/childrens/".concat(t).concat("/").concat(e))},n}]),angular.module("app.paymentform.services").service("PaymentTypeService",["GumgaRest","apiLocation",function(e,t){var a=new e(t+"/api/paymenttype");return a.get=function(e,t){if(e&&(t&&(this._query.params.pageSize=t),this._query.params.start=(e-1)*(this._query.params.pageSize-1),this._query.params.start<0&&(this._query.params.start=0),e<1))throw"Invalid page";return a.extend("get","",this._query)},a.getPaymentMethods=function(){return a.extend("get","/paymentmethodstypes")},a}]),angular.module("app.stock.services").service("OperationTypeService",["GumgaRest","apiLocation","$q",function(e,t,a){var n=new e(t.concat("/api/operationtype"));return n.recoverByCategory=function(e){return n.extend("get","/recover-by-category?category=".concat(e))},n.saveAll=function(e){var t=e.map(n.update);return a.all(t)},n.all=function(){return n.extend("get","/all")},n.allWithTenancy=function(){return n.extend("get","/getallwithtenancy")},n.recoveryAllByCategory=function(e){return n.extend("get","/recoveryallbycategory?category="+e)},n.recoveryOperationCategoryDto=function(){return n.extend("get","/recoveryoperationcategory")},n.addBusinessRules=function(e,t){return n.extend("post","/addbusinessrules/".concat(e),t)},n}]),angular.module("app.stock.services").service("StockService",["GumgaRest","apiLocation","$q",function(e,t,a){function n(e){return r.extend("post","/tree/save",e)}var r=new e(t.concat("/api/operation"));return r.saveTree=function(e){var t=e.map(n);return a.all(t)},r.getTree=function(){return r.extend("get","/tree")},r.getChildrens=function(e,t){return r.extend("get","/tree/childrens/".concat(t).concat("/").concat(e))},r}]),angular.module("app.paymentform.controllers").controller("PaymentFormController",["PaymentFormService","PaymentTypeService","PaymentCategoryService","entity","$scope",function(e,t,a,n,r){e.resetDefaultState(),r.entity=angular.copy(n.data),r.continue={},r.atributos=[],r.status={isProdutoOpen:!0},r.array=[],r.list=[],r.treePattern=["PAYMENTMETHOD","PAYMENTCATEGORY","PAYMENTTYPE"],e.getTree().success(function(e){r.list=e.data}),r.getChildrens=function(t,a){return e.getChildrens(t,a)};var o=function(e){var t={};return t.id=e.id,t.version=e.version,t.name=e.name,t.characteristicsPT=e.characteristicsPT,t.characteristics=e.characteristics,t.description=e.description,t.informative=e.informative,t.paymentMethodsTypes=e.paymentMethodsTypes,t.father=e.father,t.icon=e.icon,e.childrens=e.childrens||[],t.childrens=e.childrens.map(o),t.paymentMethodsTypes===r.treePattern[2]&&(t.informative=!1,t.method=e.method),t};r.update=function(t){var a=t.map(o);e.saveTree(a).then(function(){e.getTree().then(function(e){r.list=e.data.data})})},r.addNew=function(e,t){e.childrens=[],e.characteristics=[],e.characteristicsPT=[];var a=angular.copy(e);return a.paymentMethodsTypes=t,r.array.push(a),{}},r.deleteItem=function(e,t){"CATEGORY"===e?r.arrayCategory.splice(t,1):r.arrayType.splice(t,1)},r.invalidAddButton=function(e,t){var a=e===r.treePattern[2]&&(null==t.icon||""===t.icon);return""===e||null==t.name||""===t.name||a},r.deleteFunctions=[],r.deleteFunctions[1]=function(e){return a.deleteCollection([e])},r.deleteFunctions[2]=function(e){return t.deleteCollection([e])},t.getPaymentMethods().then(function(e){r.paymentMethodsList=e.data}),r.getSelectedPayment=function(e){r.objAux.icon=e.icon}}]),angular.module("app.stock.controllers").controller("StockFormController",["StockService","entity","$scope","NotesQueryService","OperationTypeService","$q",function(e,t,a,n,r,o){e.resetDefaultState(),a.entity=angular.copy(t.data),a.continue={},a.atributos=[],a.status={isProdutoOpen:!0},a.array=[],a.list=[],a.treePattern=["OPERATION","OPERATION","OPERATIONTYPE"];var i=null;e.getTree().then(function(e){a.list=e.data.data}),a.getChildrens=function(t,a){return e.getChildrens(t,a)};var s=function(e){var t={};return t.id=e.id,t.version=e.version,t.name=e.name,t.characteristicsPT=e.characteristicsPT,t.characteristics=e.characteristics,t.description=e.description,t.informative=e.informative,t.stockType=e.stockType,t.father=e.father,t.fixedCharacteristics=e.fixedCharacteristics,t.operationCategory=e.operationCategory,t.invoiceObjective=e.invoiceObjective,t.editable="OPERATIONTYPE"===e.stockType,e.childrens=e.childrens||[],t.childrens=e.childrens.map(s),t.stockType===a.treePattern[2]&&(t.informative=!1),t};a.update=function(t){var n=t.map(s);e.saveTree(n).then(function(){e.getTree().then(function(e){a.list=e.data.data})})},a.editOperation=function(e){return a.typeAux=e.stockType,a.objAux=e,i=o.defer(),i.promise},a.removable=function(e){return"OPERATIONTYPE"===e.stockType},a.addNew=function(e,t){if(i)i.resolve(e),i=null,a.typeAux="";else{e.childrens=[],e.characteristics=[],e.characteristicsPT=[];var n=angular.copy(e);n.stockType=t,a.array.push(n)}return{}},a.deleteItem=function(e,t){"CATEGORY"===e?a.arrayCategory.splice(t,1):a.arrayType.splice(t,1)},a.createObject=function(){a.objAux={name:"",invoiceObjective:"",operationCategory:"",fixedCharacteristics:{allowFreight:!0,allowStockMovement:!0,allowCashMovement:!0,allowNFe:!0,allowNFCe:!0,quickSale:!0}}},a.deleteFunctions=[],a.deleteFunctions[2]=function(e){return r.deleteCollection([e])},n.getDocumentFinality().then(function(e){a.documentFinalityList=e.data}),r.recoveryOperationCategoryDto().then(function(e){a.operationCategoryList=e.data})}]);